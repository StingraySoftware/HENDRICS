#!/usr/bin/env python
# Licensed under a 3-clause BSD style license - see LICENSE.rst

from __future__ import (absolute_import, unicode_literals, division,
                        print_function)
import sys
from maltpynt.mp_io import mp_get_file_type, is_string
import collections
import matplotlib.pyplot as plt
import numpy as np


def normalize(array, ref=0):
    m = ref

    std = np.std(array)

    newarr = np.zeros_like(array)

    good = array > m

    newarr[good] = (array[good] - ref) / std
    return newarr


def usage():
    print('''Usage:

          MPdumpdyn filename

          where filename is any file in a valid MaLTPyNT format for PDS or CPDS
          ''')

try:
    fname = sys.argv[1]
except:
    usage()
    sys.exit()

ftype, pdsdata = mp_get_file_type(fname)

dynpds = pdsdata['dyn' + ftype]

try:
    freq = pdsdata['freq']
except:
    flo = pdsdata['flo']
    fhi = pdsdata['fhi']
    freq = (fhi + flo) / 2

time = pdsdata['dyntimes']
freqs = np.zeros_like(dynpds)
times = np.zeros_like(dynpds)

for i, im in enumerate(dynpds):
    freqs[i, :] = freq
    times[i, :] = time[i]

t = times.flatten()
f = freqs.flatten()
d = dynpds.flatten()

size = normalize(d)

plt.scatter(t, f, s=size)
plt.xlabel('Time (s)')
plt.ylabel('Freq (Hz)')

np.savetxt('dump.txt', np.array([t, f, d]).T )
plt.show()
