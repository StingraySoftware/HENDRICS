language: python

language: c
    # This is just for "egg_info".  All other builds are explicitly given in the matrix

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

branches:
  only:
    - "master"

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - ASTROPY_VERSION=stable
        - CONDA_DEPENDENCIES='scipy matplotlib pip pandas'
        - PIP_DEPENDENCIES='emcee stingray>=0.1 sphinx-astropy'
        - MAIN_CMD='python setup.py'
        - USE_NETCDF=yes
        - STINGRAY_VERSION=stable
        - SETUP_XVFB=True
        - MPLBACKEND="Agg"
        - PYTHON_VERSION=3.6
        - USE_NUMBA=no
    matrix:
        # Make sure that egg_info works without dependencies
        - SETUP_CMD='egg_info'

matrix:
    fast_finish: true
    include:
        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - env: PYTHON_VERSION=3.6 SETUP_CMD='build_docs -w' PIP_DEPENDENCIES='sphinx-astropy emcee stingray>=0.1rc1'
        - env: PYTHON_VERSION=3.7 SETUP_CMD='test --coverage' USE_NETCDF=no
        - os: windows
          env: PYTHON_VERSION=3.6 SETUP_CMD='test --coverage' USE_NUMBA=yes PIP_DEPENDENCIES='fast-histogram scipy matplotlib pip pandas emcee sphinx-astropy' CONDA_DEPENDENCIES=''
        - env: PYTHON_VERSION=3.7 SETUP_CMD='test --coverage --remote-data' USE_NUMBA=yes PIP_DEPENDENCIES='fast-histogram git+https://git@github.com/nanograv/pint.git jplephem sphinx-astropy' STINGRAY_VERSION=devel
        - env: PYTHON_VERSION=3.6 SETUP_CMD='test --remote-data' USE_NUMBA=yes PIP_DEPENDENCIES='imageio git+https://git@github.com/nanograv/pint.git jplephem stingray sphinx-astropy'
        - env: PYTHON_VERSION=3.7 SETUP_CMD='test --coverage' USE_NUMBA=yes PIP_DEPENDENCIES='imageio fast-histogram emcee stingray>=0.1rc1 sphinx-astropy'

        # ----- Try risky stuff ----
        - env: PYTHON_VERSION=3.6 SETUP_CMD='test' USE_NUMBA=yes STINGRAY_VERSION=devel
        # Try Astropy development version
        - env: PYTHON_VERSION=3.6 ASTROPY_VERSION=development SETUP_CMD='test' PIP_DEPENDENCIES='sphinx-astropy stingray>=0.1rc1 pytest-astropy'

    allow_failures:
        # ----- Try risky stuff ----
        - env: PYTHON_VERSION=3.6 SETUP_CMD='test' USE_NUMBA=yes STINGRAY_VERSION=devel
        # Try Astropy development version
        - env: PYTHON_VERSION=3.6 ASTROPY_VERSION=development SETUP_CMD='test' PIP_DEPENDENCIES='sphinx-astropy stingray>=0.1rc1 pytest-astropy'

before_install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

install:
    # OPTIONAL DEPENDENCIES
    # Here you can add any dependencies your package may have. You can use
    # conda for packages available through conda, or pip for any other
    # packages. You should leave the `numpy=$NUMPY_VERSION` in the `conda`
    # install since this ensures Numpy does not get automatically upgraded.
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_NETCDF == yes ]]; then $CONDA_INSTALL netcdf4; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_NUMBA == yes ]]; then $CONDA_INSTALL numba; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $STINGRAY_VERSION == devel ]]; then $PIP_INSTALL git+https://github.com/stingraysoftware/stingray.git; fi
    - if [[ $SETUP_CMD != egg_info ]]; then python setup.py install; fi

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    - if [[ $SETUP_CMD == *'--coverage'* ]]; then coveralls --rcfile='hendrics/tests/coveragerc'; fi
