[metadata]
name = hendrics
description = "High ENergy Data Reduction Interface from the Command Shell"
long_description = file: README.rst
author = Matteo Bachetti
author_email = matteo@matteobachetti.it
license = BSD
license_file: LICENSE.rst
url = http://hendrics.readthedocs.io
edit_on_github = True
github_project = StingraySoftware/HENDRICS
keywords = astronomy, astrophysics, space, science, timeseries, timing
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    numpy
    astropy
    scipy
    stingray>=0.3
    matplotlib
    tqdm

[options.extras_require]
all =
    pandas
    pint-pulsar
    imageio
    numba
    netcdf4
    scikit-image
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.entry_points]
console_scripts =
    HEN2xspec = hendrics.save_as_xspec:main
    HENaccelsearch = hendrics.efsearch:main_accelsearch
    HENbaseline = hendrics.lcurve:baseline_main
    HENbinary = hendrics.binary:main_presto
    HENcalibrate = hendrics.calibrate:main
    HENcolors = hendrics.colors:main
    HENcreategti = hendrics.create_gti:main
    HENdeorbit = hendrics.fold:main_deorbit
    HENdumpdyn = hendrics.fspec:dumpdyn_main
    HENefsearch = hendrics.efsearch:main_efsearch
    HENexcvar = hendrics.exvar:main
    HENexposure = hendrics.exposure:main
    HENfake = hendrics.fake:main
    HENfold = hendrics.fold:main_fold
    HENfspec = hendrics.fspec:main
    HENjoinevents = hendrics.read_events:main_join
    HENlags = hendrics.timelags:main
    HENlcurve = hendrics.lcurve:main
    HENmodel = hendrics.modeling:main_model
    HENphaseogram = hendrics.phaseogram:main_phaseogram
    HENphasetag = hendrics.phasetag:main_phasetag
    HENplot = hendrics.plot:main
    HENreadevents = hendrics.read_events:main
    HENreadfile = hendrics.io:main
    HENrebin = hendrics.rebin:main
;    HENregfilter = hendrics.io:main_regfilter
    HENscramble = hendrics.fake:main_scramble
    HENscrunchlc = hendrics.lcurve:scrunch_main
    HENsplitevents = hendrics.read_events:main_splitevents
    HENsumfspec = hendrics.sum_fspec:main
    HENvarenergy = hendrics.varenergy:main
    HENz2vspf = hendrics.efsearch:main_z2vspf
    HENzsearch = hendrics.efsearch:main_zsearch

[options.package_data]
hendrics.tests = data/*
hendrics.compat = datasets/*
* = *.fits, *.evt, *.rmf

;[config.logging_helper]
;# Threshold for the logging messages. Logging messages that are less severe
;# than this level will be ignored. The levels are 'DEBUG', 'INFO', 'WARNING',
;# 'ERROR'
;log_level = 'INFO'
;# Whether to use color for the level names
;use_color = True
;# Whether to log warnings.warn calls
;log_warnings = True
;# Whether to log exceptions before raising them
;log_exceptions = True
;# Whether to always log messages to a log file
;log_to_file = True
;# The file to log messages to
;log_file_path = '~/.HENDRICS.log'
;# Threshold for logging messages to log_file_path
;log_file_level = 'INFO'
;# Format for log file entries
;#log_file_format = '%(asctime)s, %(origin)s, %(levelname)s, %(message)s'

[tool:pytest]
testpaths = "hendrics" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
filterwarnings =
    error::DeprecationWarning
    ignore:.*function is deprecated. Set self.value.*:DeprecationWarning:pint
    ignore:.*distutils Version classes are deprecated.*:DeprecationWarning:astropy
    ignore:SIMON says. Errorbars on cross spectra are not thoroughly tested.:UserWarning
    ignore:SIMON says. Stingray only uses poisson err_dist at the moment.:UserWarning
    ignore:SIMON says. Looks like your lightcurve:UserWarning
    ignore:Matplotlib is currently using agg, which is a:UserWarning
    ignore:Using or importing the ABCs from 'collections':DeprecationWarning
    ignore:elementwise == comparison failed and returning scalar instead:FutureWarning:astropy
    ignore:unclosed file:ResourceWarning
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    ignore:invalid value encountered:RuntimeWarning
    ignore:divide by zero encountered:RuntimeWarning
    ignore:underflow encountered:RuntimeWarning
    ignore:overflow encountered:RuntimeWarning
    ignore:table path was not set via the path= argument; using default path:UserWarning
    ignore:Beware! For cpds and derivatives, I assume that:UserWarning
    ignore:SIMON says. Lightcurves have different statistics:UserWarning
    ignore: SIMON says. Coherence is not ideal:UserWarning
    ignore:SIMON says. The excess variance in the:UserWarning
    ignore:SIMON says. Number of segments used in averaging:UserWarning
    ignore:.*deprecated alias for.*:DeprecationWarning

[coverage:run]
omit =
    hendrics/_astropy_init*
    hendrics/conftest.py
    hendrics/*setup_package*
    hendrics/tests/*
    hendrics/compat/*
    hendrics/*/tests/*
    hendrics/extern/*
    hendrics/version*
    */hendrics/_astropy_init*
    */hendrics/conftest.py
    */hendrics/*setup_package*
    */hendrics/tests/*
    */hendrics/*/tests/*
    */hendrics/extern/*
    */hendrics/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_


[pycodestyle]
max-line-length = 100
exclude = extern,*parsetab.py,*lextab.py,test_*.py,__*.py


[flake8]
max-line-length = 100
exclude = extern,*parsetab.py,*lextab.py,test_*.py,__*.py
